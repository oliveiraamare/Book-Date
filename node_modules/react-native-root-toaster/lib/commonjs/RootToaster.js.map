{"version":3,"sources":["RootToaster.tsx"],"names":["MARGIN","BLACK_COAL","styles","StyleSheet","create","container","flexDirection","alignItems","justifyContent","paddingLeft","paddingTop","paddingBottom","safeContainer","margin","padding","modal","flex","text","fontSize","lineHeight","letterSpacing","color","DEFAULT_DURATION","ANIMATION_DELAY","RootToaster","isVisible","props","visible","duration","defaultDuration","defaultMessage","setTimeout","StatusBar","setBarStyle","clearTimeout","_showTimeout","_hideTimeout","setState","state","_hide","data","_show","message","eventListener","DeviceEventEmitter","addListener","listener","prevProps","removeListener","backgroundColor","defaultColor","CloseComponent","Component"],"mappings":"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","sourcesContent":["import React, { Component, FunctionComponent } from 'react';\nimport {\n  DeviceEventEmitter,\n  EmitterSubscription,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TextStyle,\n  View,\n  ViewStyle,\n  StatusBar,\n  TouchableOpacity,\n} from 'react-native';\nimport Modal from 'react-native-modal';\n\ninterface Styles {\n  container: ViewStyle;\n  safeContainer: ViewStyle;\n  modal: ViewStyle;\n  text: TextStyle;\n}\n\ninterface Props {\n  visible?: boolean;\n  defaultDuration?: number;\n  defaultMessage?: string;\n  defaultColor?: string;\n  CloseComponent?: FunctionComponent;\n}\n\ninterface State {\n  isVisible: boolean;\n  duration: number;\n  text?: string;\n}\n\nconst MARGIN = 4;\nconst BLACK_COAL = '#2e3137';\nconst styles = StyleSheet.create<Styles>({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: MARGIN * 4,\n    paddingTop: MARGIN * 7,\n    paddingBottom: MARGIN * 4,\n  },\n  safeContainer: {\n    margin: 0,\n    padding: 0,\n  },\n  modal: { flex: 1, margin: 0, justifyContent: 'flex-start' },\n  text: {\n    fontSize: 14,\n    lineHeight: 20,\n    letterSpacing: 0,\n    color: '#ffffff',\n    flex: 1,\n  },\n});\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DELAY = 500;\n\nexport class RootToaster extends Component<Props, State> {\n  state = {\n    isVisible: this.props.visible || false,\n    duration: this.props.defaultDuration || DEFAULT_DURATION,\n    text: this.props.defaultMessage || '',\n  };\n\n  _hideTimeout = 0;\n  _showTimeout = setTimeout(() => {}, 0);\n  eventListener: EmitterSubscription | null = null;\n\n  _show = (text?: string, duration?: number) => {\n    setTimeout(() => {\n      StatusBar.setBarStyle('light-content');\n    }, ANIMATION_DELAY / 2);\n    clearTimeout(this._showTimeout);\n    clearTimeout(this._hideTimeout);\n\n    this.setState({\n      text: text || '',\n      duration: duration || DEFAULT_DURATION,\n      isVisible: true,\n    });\n\n    if (this.state.duration > 0) {\n      this._showTimeout = setTimeout(() => this._hide(), this.state.duration);\n    }\n  };\n\n  _hide = () => {\n    StatusBar.setBarStyle('dark-content');\n    clearTimeout(this._showTimeout);\n    clearTimeout(this._hideTimeout);\n\n    this.setState({ isVisible: false });\n  };\n\n  listener = (data: { message: string; duration?: number }): void => {\n    this._show(data.message || '', data.duration);\n  };\n\n  componentDidMount = () => {\n    this.eventListener = DeviceEventEmitter.addListener(\n      'showToaster',\n      this.listener\n    );\n\n    if (this.state.isVisible) {\n      this._show();\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.eventListener)\n      DeviceEventEmitter.removeListener('showToaster', this.listener);\n  }\n\n  componentDidUpdate = (prevProps: Props) => {\n    if (this.props.visible !== prevProps.visible) {\n      if (this.props.visible) {\n        this._show();\n      } else {\n        this._hide();\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Modal\n        isVisible={this.state.isVisible}\n        animationIn=\"slideInDown\"\n        animationInTiming={ANIMATION_DELAY}\n        animationOut=\"slideOutUp\"\n        animationOutTiming={ANIMATION_DELAY}\n        hasBackdrop={false}\n        coverScreen={false}\n        style={styles.modal}\n      >\n        <SafeAreaView\n          style={[\n            styles.safeContainer,\n            { backgroundColor: this.props.defaultColor || BLACK_COAL },\n          ]}\n        >\n          <View\n            style={[\n              styles.container,\n              { backgroundColor: this.props.defaultColor || BLACK_COAL },\n            ]}\n          >\n            <Text style={styles.text}>{this.state.text}</Text>\n\n            {this.props.CloseComponent && (\n              <TouchableOpacity\n                onPress={() => this._hide()}\n                style={styles.container}\n              >\n                {this.props.CloseComponent({})}\n              </TouchableOpacity>\n            )}\n          </View>\n        </SafeAreaView>\n      </Modal>\n    );\n  }\n}\n"]}