/// <reference types="node" />
import { Component, FunctionComponent } from 'react';
import { EmitterSubscription } from 'react-native';
interface Props {
    visible?: boolean;
    defaultDuration?: number;
    defaultMessage?: string;
    defaultColor?: string;
    CloseComponent?: FunctionComponent;
}
interface State {
    isVisible: boolean;
    duration: number;
    text?: string;
}
export declare class RootToaster extends Component<Props, State> {
    state: {
        isVisible: boolean;
        duration: number;
        text: string;
    };
    _hideTimeout: number;
    _showTimeout: NodeJS.Timeout;
    eventListener: EmitterSubscription | null;
    _show: (text?: string | undefined, duration?: number | undefined) => void;
    _hide: () => void;
    listener: (data: {
        message: string;
        duration?: number | undefined;
    }) => void;
    componentDidMount: () => void;
    componentWillUnmount(): void;
    componentDidUpdate: (prevProps: Props) => void;
    render(): JSX.Element;
}
export {};
